services:

  asi2-atelier1-db:
    image: postgres:latest
    container_name: asi2-atelier1-db
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: request_management_db
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - mynetwork
    ports:
      - "5432:5432" # Port PostgreSQL
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d request_management_db"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s


  discovery-service:
    build: ./discovery-service
    container_name: discovery-service
    ports:
      - "8761:8761" # Port Eureka
    networks:
      - mynetwork
    depends_on:
      asi2-atelier1-db:
        condition: service_healthy

  api-gateway:
    build: ./api-gateway
    container_name: api-gateway
    ports:
      - "8000:8000" # Port API Gateway
    networks:
      - mynetwork
    depends_on:
      - discovery-service

  orchestrator:
    build: ./request-management-service
    container_name: orchestrator
    ports:
      - "7070:7070" # Port Orchestrator
    networks:
      - mynetwork
    depends_on:
      - discovery-service

  text-generation-service:
    build: ./text-generation-service
    container_name: text-generation-service
    ports:
      - "8083:8083" # Port Text Generation Service
    networks:
      - mynetwork
    depends_on:
      - discovery-service

  image-generation-service:
    build: ./image-generation-service
    container_name: image-generation-service
    ports:
      - "8081:8081" # Port Image Generation Service
    networks:
      - mynetwork
    depends_on:
      - discovery-service

  property-service:
    build: ./property-calculation-service
    container_name: property-calculation-service
    ports:
      - "8089:8089" # Port Property Service
    networks:
      - mynetwork
    depends_on:
      - discovery-service

  backend-service:
    build: ./backend
    container_name: backend-service
    ports:
      - "8088:8080" # Port Backend Service
    networks:
      - mynetwork
    depends_on:
      - discovery-service

  activemq:
    image: symptoma/activemq:5.18.3
    ports:
      - "61616:61616"
      - "61613:61613"
      - "8161:8161"
    environment:
      ACTIVEMQ_DISALLOW_WEBCONSOLE: 'false'
      ACTIVEMQ_USERNAME: myuser
      ACTIVEMQ_PASSWORD: mypwd
      ACTIVEMQ_WEBADMIN_USERNAME: myuserweb
      ACTIVEMQ_WEBADMIN_PASSWORD: mypwd

  img-gen-ln:
    image: registry.gitlab.com/js-asi2/asi2-resources/img-gene-neural-love-api:v1.1
    ports:
      - "8080:8080"
    environment:
      external.iaimgapi.token: 'v1.811d96c7bbbd148ae0b4bd54baf8abdfee0d0dbb6f2d4321e6edb49dc30f0abd'

  ollama-local:
    image: ollama/ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama:/root/.ollama

networks:
  mynetwork:

volumes:
  pgdata:
  ollama:
